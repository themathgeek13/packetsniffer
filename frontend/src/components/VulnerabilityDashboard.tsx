import React from 'react';

interface Vulnerability {
    id: string;
    type: string;
    severity: string;
    description: string;
    timestamp: string;
}

interface Patch {
    id: string;
    vulnerability_id: string;
    type: string;
    description: string;
    timestamp: string;
}

interface VulnerabilityDashboardProps {
    vulnerabilities: Vulnerability[];
    patches: Patch[];
}

const VulnerabilityDashboard: React.FC<VulnerabilityDashboardProps> = ({
    vulnerabilities,
    patches
}) => {
    const getSeverityColor = (severity: string) => {
        switch (severity.toLowerCase()) {
            case 'critical':
                return 'bg-red-600 text-white';
            case 'high':
                return 'bg-red-500 text-white';
            case 'medium':
                return 'bg-orange-500 text-white';
            case 'low':
                return 'bg-yellow-500 text-white';
            default:
                return 'bg-gray-500 text-white';
        }
    };

    return (
        <div className="bg-gray-50 p-4 rounded-lg h-full flex flex-col">
            <div className="mb-6">
                <h2 className="text-2xl font-bold text-gray-800 mb-2">P@ck3tSn1ff3r Dashboard</h2>
                <div className="flex items-center justify-between">
                    <div className="bg-red-100 rounded-lg px-3 py-2 flex items-center">
                        <div className="w-3 h-3 bg-red-500 rounded-full mr-2 animate-pulse"></div>
                        <span className="text-red-700 font-medium">Red Team: {vulnerabilities.length} Attacks</span>
                    </div>
                    <div className="bg-blue-100 rounded-lg px-3 py-2 flex items-center">
                        <div className="w-3 h-3 bg-blue-500 rounded-full mr-2 animate-pulse"></div>
                        <span className="text-blue-700 font-medium">Blue Team: {patches.length} Patches</span>
                    </div>
                </div>
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 flex-1">
                {/* Vulnerabilities Panel */}
                <div className="bg-white rounded-lg shadow-lg overflow-hidden border border-red-200">
                    <div className="bg-red-500 text-white p-3 flex items-center">
                        <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                        </svg>
                        <h2 className="text-lg font-semibold">Red Team Attacks</h2>
                    </div>
                    
                    <div className="p-4 overflow-auto" style={{ maxHeight: '500px' }}>
                        {vulnerabilities.length === 0 ? (
                            <div className="text-center py-6 text-gray-500">No vulnerabilities detected yet</div>
                        ) : (
                            <div className="space-y-3">
                                {vulnerabilities.map((vuln) => (
                                    <div
                                        key={vuln.id}
                                        className="border border-red-100 rounded-lg p-3 hover:bg-red-50 transition"
                                    >
                                        <div className="flex justify-between items-start">
                                            <div>
                                                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getSeverityColor(vuln.severity)}`}>
                                                    {vuln.severity}
                                                </span>
                                                <h3 className="text-sm font-medium mt-1 text-gray-900">{vuln.type}</h3>
                                            </div>
                                            <span className="text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded">
                                                {new Date(vuln.timestamp).toLocaleTimeString()}
                                            </span>
                                        </div>
                                        <p className="text-sm text-gray-600 mt-2 border-t border-red-100 pt-2">{vuln.description}</p>
                                    </div>
                                ))}
                            </div>
                        )}
                    </div>
                </div>

                {/* Patches Panel */}
                <div className="bg-white rounded-lg shadow-lg overflow-hidden border border-blue-200">
                    <div className="bg-blue-500 text-white p-3 flex items-center">
                        <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                        </svg>
                        <h2 className="text-lg font-semibold">Blue Team Defenses</h2>
                    </div>
                    
                    <div className="p-4 overflow-auto" style={{ maxHeight: '500px' }}>
                        {patches.length === 0 ? (
                            <div className="text-center py-6 text-gray-500">No patches applied yet</div>
                        ) : (
                            <div className="space-y-3">
                                {patches.map((patch) => (
                                    <div
                                        key={patch.id}
                                        className="border border-blue-100 rounded-lg p-3 hover:bg-blue-50 transition"
                                    >
                                        <div className="flex justify-between items-start">
                                            <div>
                                                <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-500 text-white">
                                                    {patch.type}
                                                </span>
                                                <h3 className="text-sm font-medium mt-1 text-gray-900">Patch {patch.id}</h3>
                                            </div>
                                            <span className="text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded">
                                                {new Date(patch.timestamp).toLocaleTimeString()}
                                            </span>
                                        </div>
                                        <p className="text-sm text-gray-600 mt-2 border-t border-blue-100 pt-2">{patch.description}</p>
                                    </div>
                                ))}
                            </div>
                        )}
                    </div>
                </div>
            </div>
        </div>
    );
};

export default VulnerabilityDashboard; 